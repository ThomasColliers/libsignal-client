name: Swift

on:
  push:
    branches: [ master ]
    paths-ignore: ['node/**', 'package.json', 'yarn.lock']
  pull_request:
    branches: [ master ]
    paths-ignore: ['node/**', 'package.json', 'yarn.lock']

env:
  CARGO_TERM_COLOR: always

jobs:
  build_as_package:
    name: Build as Swift Package

    runs-on: macOS-latest

    steps:
    - name: Install nightly rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        profile: minimal

    - uses: actions/checkout@v2

    - name: Build libsignal-ffi
      run: cargo build --verbose -p libsignal-ffi

    - name: Build Swift and run tests
      run: swift test -v --enable-code-coverage
      working-directory: swift

    - name: Run lint
      run: swiftlint lint --reporter github-actions-logging
      working-directory: swift

    - name: Generate coverage report
      run: xcrun llvm-cov show --format=html --instr-profile .build/x86_64-apple-macosx/debug/codecov/default.profdata .build/x86_64-apple-macosx/debug/*.xctest/Contents/MacOS/* Sources --output-dir coverage-report
      working-directory: swift

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: Coverage
        path: swift/coverage-report

    - name: Summarize coverage
      run: xcrun llvm-cov report --instr-profile .build/x86_64-apple-macosx/debug/codecov/default.profdata .build/x86_64-apple-macosx/debug/*.xctest/Contents/MacOS/* Sources
      working-directory: swift

  build_as_cocoapod:
    name: Build as CocoaPod
    runs-on: macOS-latest
    steps:
      - name: Install nightly rust (needed for libsignal-ffi)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          target: x86_64-apple-ios

      - uses: actions/checkout@v2

      - name: Check out libsignal-ffi
        uses: actions/checkout@v2
        with:
          repository: signalapp/libsignal-ffi
          path: libsignal-ffi

      - name: Run pod lint
        # No import validation because it tries to build unsupported platforms (like 32-bit iOS).
        # FIXME: --allow-warnings because the repository isn't public yet.
        run: pod lib lint --verbose --skip-import-validation --allow-warnings
